#include <stdio.h>
#include <stdlib.h>

// Define the structure for a tree node
typedef struct TreeNode {
    int value;               // Value of the node
    struct TreeNode* left;   // Pointer to the left child
    struct TreeNode* right;  // Pointer to the right child
} TreeNode;

// Function to create a new tree node
TreeNode* createNode(int value) {
    TreeNode* newNode = (TreeNode*)malloc(sizeof(TreeNode));
    if (newNode == NULL) {
        fprintf(stderr, "Error allocating memory\n");
        exit(1);
    }
    newNode->value = value;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

// Function to print the tree in-order (for demonstration purposes)
void printInOrder(TreeNode* root) {
    if (root != NULL) {
        printInOrder(root->left);
        printf("%d ", root->value);
        printInOrder(root->right);
    }
}

// Main function to demonstrate the usage
int main() {
    // Create nodes
    TreeNode* root = createNode(1);
    TreeNode* leftChild = createNode(2);
    TreeNode* rightChild = createNode(3);
    TreeNode* leftLeftChild = createNode(4);
    TreeNode* leftRightChild = createNode(5);
